{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHubFinder-master\\\\src\\\\components\\\\users\\\\Search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class Search extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      text: ''\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.text === '') {\n        this.props.setAlert('Please Enter Something...', 'light');\n      } else {\n        this.props.searchUsers(this.state.text);\n        this.setState({\n          text: ''\n        });\n      }\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  //e.target.name is used when we have more than one input types such as name, email, num etc etc, it helps us to set value for every elements otherwise we have to write separatly for each element\n  // this.setState({ text: e.target.value });\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Search Users...\",\n      value: this.state.text,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"btn btn-dark btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light btn-block\",\n      onClick: this.props.clearUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Clear\"));\n  }\n\n}\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  //short cut =  ptfr\n  clearUsers: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["D:/GitHubFinder-master/src/components/users/Search.js"],"names":["React","Component","PropTypes","Search","state","text","onSubmit","e","preventDefault","props","setAlert","searchUsers","setState","onChange","target","name","value","render","clearUsers","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD4B;;AAAA,SAWpCC,QAXoC,GAWzBC,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAI,KAAKJ,KAAL,CAAWC,IAAX,KAAoB,EAAxB,EAA4B;AAC1B,aAAKI,KAAL,CAAWC,QAAX,CAAoB,2BAApB,EAAiD,OAAjD;AACD,OAFD,MAEO;AACL,aAAKD,KAAL,CAAWE,WAAX,CAAuB,KAAKP,KAAL,CAAWC,IAAlC;AACA,aAAKO,QAAL,CAAc;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD;AACF,KApBmC;;AAAA,SAsBpCQ,QAtBoC,GAsBzBN,CAAC,IAAI,KAAKK,QAAL,CAAc;AAAE,OAACL,CAAC,CAACO,MAAF,CAASC,IAAV,GAAiBR,CAAC,CAACO,MAAF,CAASE;AAA5B,KAAd,CAtBoB;AAAA;;AAsBgC;AACpE;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAE,KAAKX,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKQ,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,eAgBE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWS,UAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,CADF;AAyBD;;AAnDmC;AAAzBf,M,CAKJgB,S,GAAY;AACjBR,EAAAA,WAAW,EAAET,SAAS,CAACkB,IAAV,CAAeC,UADX;AACuB;AACxCH,EAAAA,UAAU,EAAEhB,SAAS,CAACkB,IAAV,CAAeC,UAFV;AAGjBX,EAAAA,QAAQ,EAAER,SAAS,CAACkB,IAAV,CAAeC;AAHR,C;AAiDrB,eAAelB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Search extends Component {\n  state = {\n    text: ''\n  };\n\n  static propTypes = {\n    searchUsers: PropTypes.func.isRequired, //short cut =  ptfr\n    clearUsers: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.text === '') {\n      this.props.setAlert('Please Enter Something...', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({ text: '' });\n    }\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value }); //e.target.name is used when we have more than one input types such as name, email, num etc etc, it helps us to set value for every elements otherwise we have to write separatly for each element\n  // this.setState({ text: e.target.value });\n\n  render() {\n    return (\n      <div>\n        <form className='form' onSubmit={this.onSubmit}>\n          <input\n            type='text'\n            name='text'\n            placeholder='Search Users...'\n            value={this.state.text}\n            onChange={this.onChange}\n          />\n          <input\n            type='submit'\n            value='Search'\n            className='btn btn-dark btn-block'\n          />\n        </form>\n\n        <button\n          className='btn btn-light btn-block'\n          onClick={this.props.clearUsers}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}